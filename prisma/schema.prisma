// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String      @id @default(uuid())
  nama      String
  username  String      @unique
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  deleted   DateTime?
}

model Jabatan {
  id          String     @id @default(uuid())
  jabatan     String
  keterangan  String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  deleted     DateTime?
  pegawai    Pegawai[]
}

model Divisi {
  id          String     @id @default(uuid())
  divisi      String
  keterangan  String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  deleted     DateTime?
  pegawai     Pegawai[]
  pekerjaan   Pekerjaan[]
}

model Pegawai {
  id          String      @id @default(uuid())  
  username    String      @unique
  password    String
  nip         String
  nama        String
  tglLahir    DateTime    @db.Date
  idJabatan   String
  idDivisi    String
  foto        String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  deleted     DateTime?
  jabatan     Jabatan     @relation(fields: [idJabatan], references: [id])
  divisi      Divisi      @relation(fields: [idDivisi], references: [id])
  aktivitas   AktivitasPegawai[]
}

model Level {
  id           String     @id @default(uuid())
  level        String
  pengali      Float
  createdAt    DateTime    @default(now())
  updatedAt    DateTime?   @updatedAt
  deleted      DateTime?
  pekerjaan    Pekerjaan[]
}

model Pekerjaan {
  id            String     @id @default(uuid())
  pekerjaan     String
  durasi        Int
  target        Int
  satuanTarget  String
  idLevel       String
  idDivisi      String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
  deleted       DateTime?
  level         Level       @relation(fields: [idLevel], references: [id])
  divisi        Divisi      @relation(fields: [idDivisi], references: [id])
  aktivitas     AktivitasPegawai[]
}

model AktivitasPegawai {
  idPegawai     String
  idPekerjaan   String
  tglMulai      DateTime    @db.Date
  tglSelesai    DateTime    @db.Date
  realisasi     Int?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
  deleted       DateTime?
  pegawai       Pegawai   @relation(fields: [idPegawai], references: [id])
  pekerjaan     Pekerjaan @relation(fields: [idPekerjaan], references: [id])

  @@id([idPegawai, idPekerjaan])
}